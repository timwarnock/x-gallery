#!/usr/local/php5/bin/php
<?php

array_shift($argv);
if ($argv[0] == '-f') {
  array_shift($argv);
  foreach( $argv as $dir ) {
    update_thumbs( trim($dir, '/') );
  }
} else {
  foreach( $argv as $dir ) {
     update_exhibit( trim($dir, '/') );
   }
}

function update_thumbs( $dir ) {
  $images = list_images( $dir );
  foreach ($images as $image) {
    print "processing $dir/$image\n";
    create_thumbnails("$dir/$image");
  }
}

function update_exhibit( $dir ) {
  if (file_exists( $dir )) {
    $META = new SimpleXMLElement('<exhibit />');
    $OLDMETA = new SimpleXMLElement('<exhibit />');
    if (is_readable("$dir/META.xml")) {
      $OLDMETA = simplexml_load_file("$dir/META.xml");
    } else {
      print("This appears to be a new exhibit!\n");
      $OLDMETA->addChild('title', question('Exhibit Title: '));
      $OLDMETA->addChild('desc', question('Exhibit Description: '));
    }
    $META->addChild('title', (string)$OLDMETA->title);
    $META->addChild('desc', (string)$OLDMETA->desc);
    $META->addChild('name', $dir);
    $existing_images = array();
    foreach ($OLDMETA->artwork as $artwork) {
      if (file_exists("$dir/" . $artwork->filename)) {
        array_push($existing_images, ''.$artwork->filename);
        $newart = $META->addChild('artwork');
        foreach ($artwork->children() as $node) {
          $newart->addChild($node->getName(), $node);
        }
      }
    }
    $all_images = list_images($dir);
    $new_images = array_diff($all_images, $existing_images);
    foreach ($new_images as $img) {
      $xml = process_artwork("$dir/$img");
      $newart = $META->addChild('artwork');
      foreach ($xml->children() as $node) {
        $newart->addChild($node->getName(), $node);
      }
    }
    if (file_exists('cache/META.xml'))
      unlink('cache/META.xml');
    if (file_exists("$dir/META.xml.bak"))
      unlink("$dir/META.xml.bak");
    if (file_exists("$dir/META.xml"))
      rename("$dir/META.xml", "$dir/META.xml.bak");
    $dom = dom_import_simplexml($META)->ownerDocument;
    $dom->formatOutput = true;
    file_put_contents("$dir/META.xml", $dom->saveXML());
  }
}

function list_images( $dir ) {
  $images = array();
  $handler = opendir( $dir );
  while ($file = readdir($handler)) {
    if ( preg_match('/\.jpg$/i', $file) &&
         !preg_match('/^img_/', $file) &&
         !preg_match('/^small_img_/', $file) ) {
      array_push($images,$file);
    }
  }
  closedir($handler);
  return $images;
}

function process_artwork( $file ) {
  $xml = new SimpleXMLElement('<artwork />');
  print "---\nprocessing $file\n";
  create_thumbnails( $file );
  $xml->addChild('filename', basename($file));
  $xml->addChild('title', question('Title: '));
  $xml->addChild('date', question('Date (yyyy-mm-dd): '));
  $xml->addChild('desc', question('Description: '));
  // check for media
  $path_parts = pathinfo($file);
  foreach (array('webm', 'mp4', 'ogv', 'swf') as $ext) { 
    if (file_exists($path_parts['dirname'] . '/' . $path_parts['filename'] . ".$ext")) {
	  $xml->addchild($ext, $path_parts['filename'] . ".$ext");
    }
  }
  $price = question('Price: ');
  if (strlen($price) > 0) {
    $xml->addChild('price', $price);
  }
  return $xml;
}

function question($q) {
  print( $q );
  return trim( fread(STDIN, 1000));
}

function create_thumbnails( $file ) {
  $basename = basename($file);
  $dir = dirname($file);
  `convert -resize 800 $file $dir/img_$basename`;
  `convert -resize 260x260 $dir/img_$basename $dir/small_img_$basename`;
}
?>
